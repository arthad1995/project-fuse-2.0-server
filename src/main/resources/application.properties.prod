spring.datasource.url=jdbc:mysql://{{mysql_host}}:3306/{{mysql_db}}?useSSL=false
# Username and password
spring.datasource.username = {{mysql_user}}
spring.datasource.password = {{mysql_password}}
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

# Spring mail
spring.mail.host = smtp.gmail.com
spring.mail.port = 587
spring.mail.username = {{email_address}}
spring.mail.password = {{email_password}}
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.starttls.enable = true

# Registration requirement
fuse.requireRegistration = false
fuse.baseUrl = {{base_url}}
fuse.fileUploadPath = {{upload_path}}
fuse.elasticsearch_host = {{elasticsearch_host}}
fuse.reindex_period_seconds = 60
fuse.use_elasticsearch = {{use_elasticsearch}}

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = none

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

spring.http.multipart.max-file-size=5MB
spring.http.multipart.max-request-size=5MB

spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext
